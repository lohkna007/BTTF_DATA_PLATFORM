# scripts/visualization.py
"""
This script loads the aggregated metrics CSV (generated by data_processing.py)
and creates a bar chart to visualize average fuel consumption by temperature range.
"""

import os
import pandas as pd
import matplotlib.pyplot as plt
import seaborn as sns
import logging

# Setup logging.
log_file = os.path.join(os.path.dirname(__file__), '../logs/app.log')
logging.basicConfig(
    filename=log_file,
    level=logging.INFO,
    format='%(asctime)s - %(levelname)s - %(message)s'
)

def load_aggregated_data(csv_path):
    try:
        data = pd.read_csv(csv_path)
        logging.info("Loaded aggregated data: %d records", len(data))
        return data
    except Exception as e:
        logging.error("Error loading aggregated data from %s: %s", csv_path, e)
        return None

def plot_aggregated_data(agg_df):
    try:
        sns.set(style="whitegrid")
        plt.figure(figsize=(8, 6))
        ax = sns.barplot(x="temp_range", y="avg_fuel_consumption", data=agg_df, palette="viridis")
        ax.set_xlabel("Temperature Range")
        ax.set_ylabel("Average Fuel Consumption (L/km)")
        ax.set_title("Average Fuel Consumption by Temperature Range")
        plt.tight_layout()
        plt.show()
        logging.info("Displayed aggregated data visualization.")
    except Exception as e:
        logging.error("Error during visualization: %s", e)

def main():
    # Path to the aggregated metrics CSV file.
    csv_path = os.path.join(os.path.dirname(__file__), "../data/aggregated_metrics.csv")
    agg_df = load_aggregated_data(csv_path)
    if agg_df is not None:
        plot_aggregated_data(agg_df)
    else:
        print("Failed to load aggregated data. Check logs for details.")

if __name__ == "__main__":
    main()
